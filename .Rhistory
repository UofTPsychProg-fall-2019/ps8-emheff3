# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
View(tbl)
tbl_clean <- select(tbl, session_id, genderidentity, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
View(tbl_clean)
summary(tbl_clean)
help(na_if)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all))
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias - D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
# loading libraries  ---------------------------------------------
library(tidyverse)
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias - D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
tbl_clean <- rename(tbl_clean,
id = session_id)
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002)
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all))
tbl_clean_2 <- rename(tbl_clean,
id = session_id,
race = raceomb_002)
tbl_clean_2 <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias - D_biep.White_Good_all)
tbl_clean_2 <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias = D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias = D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
summary(tbl_clean)
tbl_clean <- str(tbl_clean)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all))
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias = D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
View(tbl_clean)
summary(tbl_clean)
cols <- c("gender", "state")
tbl_clean[cols] <- lapply(tbl_clean[cols],as.factor)
View(tbl_clean)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
View(gender_count)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, n)
View(gender_count)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
print(gender_count[gender,1:3])
print(gender_count[1:3, gender])
print(gender_count[1:3])
print(gender_count[1:3,])
print(filter(gender_count, !is.na(n))[1:3,])
temp <- filter(gender_count, !is.na(n))[1:3,])
temp <- filter(gender_count, !is.na(n))
View(temp)
temp <- filter(gender_count, !is.na(gender))
print(filter(gender_count, !is.na(gender))[1:3,]
print(filter(gender_count, !is.na(gender))[1:3,])
print(filter(gender_count, !is.na(gender))[1:3,])
print(filter(gender_count, !is.na(gender))[1:3,1])
help(recode)
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 1, "[1]" = 2, "[5]" = 3, .default = 4)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu7 < 3 ~ "no highschool"
tbl_clean$edu7 == 3 ~ "some highschool"
tbl_clean$edu7 == 4 ~  "highschool graduate"
tbl_clean$edu7 == 5 ~ "some college"
tbl_clean$edu7 < 9 ~ "postsecondary degree"
tbl_clean$edu7 == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)"
TRUE ~ "advanced degree")
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu7 < 3 ~ "no highschool",
tbl_clean$edu7 == 3 ~ "some highschool",
tbl_clean$edu7 == 4 ~  "highschool graduate",
tbl_clean$edu7 == 5 ~ "some college",
tbl_clean$edu7 < 9 ~ "postsecondary degree",
tbl_clean$edu7 == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = "F", "[1]" = "M", "[5]" = "GC/NC", .default = "Other")
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean,
gender4 = recode(tbl_clean$gender, "[2]" = "F", "[1]" = "M", "[5]" = "GC/NC", .default = "Other"),
edu7 = case_when(tbl_clean$edu14 < 3 ~ "no highschool",
tbl_clean$edu14 == 3 ~ "some highschool",
tbl_clean$edu14 == 4 ~  "highschool graduate",
tbl_clean$edu14 == 5 ~ "some college",
tbl_clean$edu14 < 9 ~ "postsecondary degree",
tbl_clean$edu14 == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree"))
View(tbl_clean)
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all))
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias = D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
summary(tbl_clean)
cols <- c("gender", "state")
tbl_clean[cols] <- lapply(tbl_clean[cols],as.factor)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
print(filter(gender_count, !is.na(gender))[1:3,]) #I wanted to print both columns, but to just print the genders I'd add a 1 after the comma.
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = "F", "[1]" = "M", "[5]" = "GC/NC", .default = "Other")
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 10 | tbl_clean$edu == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 9 | tbl_clean$edu == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
View(tbl_clean)
# white men
print(mean(filter(tbl_clean, gender == "M" && race == 6)["bias",]))
# white men
tmp <- filter(tbl_clean, gender == "M" && race == 6)
View(tmp)
# white men
tmp <- filter(tbl_clean, gender4 == "M" && race == 6)
# white men
tmp <- filter(tbl_clean, gender4 == "M" & race == 6)
# white men
tmp <- mean(filter(tbl_clean, gender4 == "M" & race == 6)[tbl_clean$bias,])
# white men
mean(tbl_clean$bias[tbl_clean$gender4 == "M" & tbl_clean$race == 6])
# white men
tbl_clean[tbl_clean$gender4 == "M" & tbl_clean$race == 6, mean(tbl_clean$bias)])
# white men
tbl_clean[tbl_clean$gender4 == "M" & tbl_clean$race == 6, mean(tbl_clean$bias]
# white men
tbl_clean[tbl_clean$gender4 == "M" & tbl_clean$race == 6, mean(tbl_clean$bias)]
# white men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$race == 6)
mean(tmp$bias)
whiteMen_mean <- mean(tmp$bias)
print(whiteMen_mean)
# white women
tmp <- filter(tbl_clean, tbl_clean$gender4 == "F" & tbl_clean$race == 6)
whiteWomen_mean <- mean(tmp$bias)
print(whiteWomen_mean)
# advanced degree holders who are men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$edu7 == "advanced degree")
# advanced degree holders who are men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$edu7 == "advanced degree")
advancedMen_mean <- mean(tmp$bias)
print(advancedMen_mean)
# high school graduates who are men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$edu7 == "highschool graduate")
hsMen_mean <- mean(tmp$bias)
print(hsMen_mean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all,
Mn_RT_all_3467, edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all))
tbl_clean <- rename(tbl_clean,
id = session_id,
race = raceomb_002,
bias = D_biep.White_Good_all,
rt = Mn_RT_all_3467,
edu = edu_14,
pol = politicalid_7,
state = STATE,
att = att_7,
temp_b = tblacks_0to10,
temp_w = twhites_0to10)
summary(tbl_clean)
cols <- c("gender", "state")
tbl_clean[cols] <- lapply(tbl_clean[cols],as.factor)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
print(filter(gender_count, !is.na(gender))[1:3,]) #I wanted to print both columns, but to just print the genders I'd add a 1 after the comma.
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = "F", "[1]" = "M", "[5]" = "GC/NC", .default = "Other")
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu7 <- case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 9 | tbl_clean$edu == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree")
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean,
gender4 = recode(tbl_clean$gender, "[2]" = "F", "[1]" = "M", "[5]" = "GC/NC", .default = "Other"),
edu7 = case_when(tbl_clean$edu < 3 ~ "no highschool",
tbl_clean$edu == 3 ~ "some highschool",
tbl_clean$edu == 4 ~  "highschool graduate",
tbl_clean$edu == 5 ~ "some college",
tbl_clean$edu < 9 ~ "postsecondary degree",
tbl_clean$edu == 10 | tbl_clean$edu7 == 14 ~ "masters (MA  & MBA)",
TRUE ~ "advanced degree"))
# white men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$race == 6)
whiteMen_mean <- mean(tmp$bias)
print(whiteMen_mean)
# white women
tmp <- filter(tbl_clean, tbl_clean$gender4 == "F" & tbl_clean$race == 6)
whiteWomen_mean <- mean(tmp$bias)
print(whiteWomen_mean)
# advanced degree holders who are men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$edu7 == "advanced degree")
advancedMen_mean <- mean(tmp$bias)
print(advancedMen_mean)
# high school graduates who are men
tmp <- filter(tbl_clean, tbl_clean$gender4 == "M" & tbl_clean$edu7 == "highschool graduate")
hsMen_mean <- mean(tmp$bias)
print(hsMen_mean)
